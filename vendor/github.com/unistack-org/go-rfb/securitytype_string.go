// Code generated by "stringer -type=SecurityType"; DO NOT EDIT.

package rfb

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SecTypeUnknown-0]
	_ = x[SecTypeNone-1]
	_ = x[SecTypeVNC-2]
	_ = x[SecTypeTight-16]
	_ = x[SecTypeATEN-16]
	_ = x[SecTypeVeNCrypt-19]
}

const (
	_SecurityType_name_0 = "SecTypeUnknownSecTypeNoneSecTypeVNC"
	_SecurityType_name_1 = "SecTypeTight"
	_SecurityType_name_2 = "SecTypeVeNCrypt"
)

var (
	_SecurityType_index_0 = [...]uint8{0, 14, 25, 35}
)

func (i SecurityType) String() string {
	switch {
	case i <= 2:
		return _SecurityType_name_0[_SecurityType_index_0[i]:_SecurityType_index_0[i+1]]
	case i == 16:
		return _SecurityType_name_1
	case i == 19:
		return _SecurityType_name_2
	default:
		return "SecurityType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
